name: Build on dispatch
run-name: "Build for ${{ github.event.inputs.suite }} ${{ github.event.inputs.flavor }} by @${{ github.actor }} (Trigger: ${{ github.event.inputs.trigger_source }})"

on:
  workflow_dispatch:
    inputs:
      suite:
        description: "Suite name"
        required: true
        type: choice
        default: "noble"
        options:
        - "jammy"
        - "noble"

      flavor:
        description: "Flavor type"
        required: true
        type: choice
        default: "desktop"
        options:
        - "desktop"
        - "server"

      trigger_source:
        description: "Source of the trigger (e.g., manual, workflow)"
        required: false
        type: string
        default: "manual"

      artifact_retention_days:
        description: "Number of days to retain the artifact"
        required: false
        type: number
        default: 1

env:
  RECIPE_REPO: "diverger/ubuntu-rockchip"
  RECIPE_PATH: "."
  ROOTFS_PATH: "./build"

jobs:
  build:
    if: ${{ github.repository_owner == 'diverger' && github.actor == 'diverger' }}
    runs-on: ubuntu-latest
    name: Build rootfs

    steps:

      - name: Show trigger source
        run: |
          echo "Workflow triggered by: ${{ github.event.inputs.trigger_source }}"

        # - name: Manual trigger step
        #   if: github.event.inputs.trigger_source == 'manual'
        #   run: echo "This step runs only for manual triggers."

        # - name: Workflow trigger step
        #   if: github.event.inputs.trigger_source == 'workflow'
        #   run: echo "This step runs only when triggered by another workflow."

      - name: Get more disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true

      - name: Checkout private repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.RECIPE_REPO }}
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          path: ${{ env.RECIPE_PATH }}
          clean: false
          fetch-depth: 1

      # - name: List files in workspace root
      #   shell: bash
      #   run: ls -la ${{ env.RECIPE_PATH }}

      - name: Set artifact variables
        id: vars
        run: |
          suite_ver=${{ github.event.inputs.suite == 'jammy' && '22.04' || github.event.inputs.suite == 'noble' && '24.04' }}
          artifact_name="ubuntu-${suite_ver}-preinstalled-${{ github.event.inputs.flavor }}-arm64-rootfs"
          artifact_path="${{ env.ROOTFS_PATH }}/ubuntu-${suite_ver}-preinstalled-${{ github.event.inputs.flavor }}-arm64.rootfs.tar.xz"
          echo "artifact_name=${artifact_name}" >> $GITHUB_OUTPUT
          echo "artifact_path=${artifact_path}" >> $GITHUB_OUTPUT

      - name: Hash source files
        id: hash
        shell: bash
        run: |
          # Include all files/dirs in *this* repo that affect the build output
          echo "files_hash=$(find ${{ env.RECIPE_PATH }}/scripts/build-rootfs.sh ${{ env.RECIPE_PATH }}/build.sh ${{ env.RECIPE_PATH }}/config -type f -print0 | sort -z | xargs -0 sha1sum | sha1sum | awk '{ print $1 }')" >> $GITHUB_OUTPUT

      - name: Get external repo commit hash
        id: external_commit
        shell: bash
        run: |
          # Get the latest commit hash of the diverger branch from the external repo
          # Use --filter=blob:none and --no-checkout for efficiency
          git clone --filter=blob:none --no-checkout --depth 1 --branch diverger https://github.com/diverger/livecd-rootfs-joshua temp-clone-meta
          echo "commit_hash=$(git -C temp-clone-meta rev-parse HEAD)" >> $GITHUB_OUTPUT
          rm -rf temp-clone-meta

      - name: Cache artifact
        id: cache-artifact
        uses: actions/cache@v4
        with:
          # Cache the specific artifact file instead of the whole directory
          path: ${{ steps.vars.outputs.artifact_path }}
          # ---- UPDATED KEY ----
          # Include OS, suite, flavor, local files hash, AND external repo commit hash
          key: ${{ runner.os }}-${{ github.event.inputs.suite }}-${{ github.event.inputs.flavor }}-${{ steps.hash.outputs.files_hash }}-${{ steps.external_commit.outputs.commit_hash }}
          # restore-keys: |
          #   ${{ runner.os }}-${{ github.event.inputs.suite }}-${{ github.event.inputs.flavor }}-${{ steps.hash.outputs.files_hash }}-
          #   ${{ runner.os }}-${{ github.event.inputs.suite }}-${{ github.event.inputs.flavor }}-

      - name: Install dependencies
        if: steps.cache-artifact.outputs.cache-hit != 'true'
        shell: bash
        run: |
          # Update, remove needrestart, and install dependencies in one go
          sudo apt-get update && sudo apt-get purge needrestart -y && \
          sudo apt-get install -y build-essential gcc-aarch64-linux-gnu bison \
          qemu-user-static qemu-system-arm qemu-efi-aarch64 u-boot-tools binfmt-support \
          debootstrap flex libssl-dev bc rsync kmod cpio xz-utils fakeroot parted \
          udev dosfstools uuid-runtime git-lfs device-tree-compiler python3 \
          python-is-python3 fdisk bc debhelper python3-pyelftools python3-setuptools \
          python3-pkg-resources swig libfdt-dev libpython3-dev dctrl-tools gawk

      - name: Build
        if: steps.cache-artifact.outputs.cache-hit != 'true'
        shell: bash
        run: sudo ${{ env.RECIPE_PATH }}/build.sh --suite=${{ github.event.inputs.suite }} --flavor=${{ github.event.inputs.flavor }} --rootfs-only

      - name: Fix permissions for cache/upload
        if: steps.cache-artifact.outputs.cache-hit != 'true' # Only run if build happened
        shell: bash
        run: |
          artifact_file="${{ steps.vars.outputs.artifact_path }}"
          echo "Attempting to fix ownership for ${artifact_file}"
          if [ -f "${artifact_file}" ]; then
            # Change ownership of the specific artifact file
            sudo chown runner:runner "${artifact_file}" || echo "chown failed but continuing"
            echo "Ownership fix attempt finished for ${artifact_file}."
          else
            echo "Artifact file ${artifact_file} not found, skipping ownership fix."
            # Optionally, fail if the artifact wasn't created when expected
            # exit 1
          fi

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
            name: ${{ steps.vars.outputs.artifact_name }}
            path: ${{ steps.vars.outputs.artifact_path }}
            retention-days: ${{ github.event.inputs.artifact_retention_days }}
            if-no-files-found: error
